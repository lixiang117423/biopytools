"""
最长转录本提取命令 | Longest mRNA Extraction Command
"""

import click
import sys
from ...longest_mrna.main import main as longest_mrna_main


@click.command(short_help='从基因组中提取每个基因的最长转录本',
               context_settings=dict(help_option_names=['-h', '--help'], max_content_width=120))
@click.option('--genome', '-g',
              required=True,
              type=click.Path(exists=True),
              help='输入基因组FASTA文件 | Input genome FASTA file')
@click.option('--gff3', '-f',
              required=True,
              type=click.Path(exists=True),
              help='输入GFF3注释文件 | Input GFF3 annotation file')
@click.option('--output', '-o',
              required=True,
              type=click.Path(),
              help='输出FASTA文件 | Output FASTA file')
@click.option('--gene-info',
              type=click.Path(),
              help='基因信息输出文件 (默认自动生成) | Gene info output file (auto-generated by default)')
def longestmrna(genome, gff3, output, gene_info):
    """
    最长转录本提取工具 (模块化版本)
    
    从基因组序列和GFF3注释文件中提取每个基因的最长转录本对应的蛋白质序列。
    该工具会分析所有转录本的CDS长度，自动选择最长的转录本进行序列提取。
    
    功能特点 | Features:
    - 自动识别每个基因的最长转录本
    - 基于CDS长度计算，确保提取完整的编码序列
    - 生成详细的基因信息统计文件
    - 支持标准GFF3格式注释
    - 输出标准FASTA格式蛋白质序列
    
    输出文件 | Output Files:
    - 主输出文件: 包含最长转录本蛋白质序列的FASTA文件
    - 基因信息文件: 包含基因ID、转录本ID、CDS长度等详细信息
    - 控制台统计: 处理过程中的详细统计信息
    
    示例 | Examples:
    
    \b
    # 基本用法
    biopytools longest-mrna -g genome.fasta -f annotation.gff3 -o longest_proteins.fasta
    
    \b
    # 指定基因信息输出文件
    biopytools longest-mrna --genome genome.fa --gff3 genes.gff3 \\
        --output proteins.fa --gene-info gene_details.tsv
    
    \b
    # 处理大基因组文件
    biopytools longest-mrna -g large_genome.fasta -f comprehensive_annotation.gff3 \\
        -o extracted_proteins.fasta --gene-info gene_summary.txt
    
    输入文件要求 | Input Requirements:
    
    GFF3文件格式:
    - 必须包含gene、mRNA、CDS等特征类型
    - 需要正确的Parent-Child关系
    - CDS特征必须包含完整的坐标信息
    
    基因组FASTA文件:
    - 序列ID必须与GFF3文件中的seqid匹配
    - 支持多序列FASTA格式
    - 建议使用标准的染色体/scaffold命名
    
    输出FASTA格式:
    >gene_id|transcript_id|CDS_length
    MATLQKIESTVSGQVNLILKPNMCYTQGDVTCKPG...
    
    基因信息文件格式:
    gene_id    transcript_id    cds_length    chromosome    start    end
    gene001    transcript001    1524         chr1          1000     2524
    
    处理流程 | Processing Pipeline:
    1. 解析GFF3注释文件，提取基因和转录本信息
    2. 计算每个转录本的CDS总长度
    3. 为每个基因选择CDS长度最长的转录本
    4. 从基因组文件中提取对应的蛋白质序列
    5. 生成统计报告和输出文件
    
    注意事项 | Notes:
    - 只处理具有完整CDS信息的转录本
    - 如果多个转录本具有相同的最长CDS长度，选择第一个
    - 输出序列为蛋白质序列，已进行翻译处理
    - 建议确保基因组文件和GFF3文件来源一致
    """
    
    # 构建参数列表传递给原始main函数
    args = ['longestmrna.py']
    
    # 必需参数
    args.extend(['-g', genome])
    args.extend(['-f', gff3])
    args.extend(['-o', output])
    
    # 可选参数
    if gene_info:
        args.extend(['--gene-info', gene_info])
    
    # 保存并恢复sys.argv
    original_argv = sys.argv
    sys.argv = args
    
    try:
        # 调用原始的main函数
        longest_mrna_main()
    except SystemExit as e:
        # 处理程序正常退出
        if e.code != 0:
            sys.exit(e.code)
    except KeyboardInterrupt:
        click.echo("\n提取流程被用户中断 | Extraction pipeline interrupted by user", err=True)
        sys.exit(1)
    except Exception as e:
        click.echo(f"运行错误 | Runtime error: {e}", err=True)
        sys.exit(1)
    finally:
        sys.argv = original_argv